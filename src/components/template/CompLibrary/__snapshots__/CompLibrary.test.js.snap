// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Component /> spec renders the component 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="sc-gKXOVf gukpUR"
      >
        <header
          class="header sc-eCYdqJ lkPLVQ"
        >
          <nav
            class="navbar  sc-hKMtZM jzgEMa"
          >
            <a
              class="navbar-brand "
              href="/"
            >
              <img
                alt="logo-img"
                src="test-file-stub"
                width="150"
              />
            </a>
            <div
              class="sc-gsnTZi gXHhKa collapse navbar-collapse menu-items"
            >
              <ul
                class="navbar-nav ml-auto main-menu "
              >
                <li
                  class="active dropdown-hide"
                >
                  <a
                    class="nav-link"
                    href="/"
                    target="_self"
                  >
                    Tech Stacks
                  </a>
                </li>
                <li
                  class="inactive dropdown-hide"
                >
                  <a
                    class="nav-link"
                    href="/component-library"
                    target="_self"
                  >
                    Component Library
                  </a>
                </li>
                <li
                  class="inactive dropdown-hide"
                >
                  <a
                    class="nav-link"
                    href="/project-structure"
                    target="_self"
                  >
                    Project Structure
                  </a>
                </li>
                <li
                  class="inactive dropdown-hide"
                >
                  <a
                    class="nav-link"
                    href="/utilities"
                    target="_self"
                  >
                    Utilities
                  </a>
                </li>
                <li
                  class="inactive dropdown-hide"
                >
                  <a
                    class="nav-link"
                    href="/testNav"
                    target="_self"
                  >
                    TestNav
                  </a>
                  <div
                    class="undefined collapse navbar-collapse sub-menu"
                  >
                    <ul
                      class="navbar-nav ml-auto sub-menu-1 "
                    >
                      <li
                        class="inactive dropdown-hide"
                      >
                        <a
                          class="nav-link"
                          href="/form"
                          target="_self"
                        >
                          FormEx
                        </a>
                      </li>
                      <li
                        class="inactive dropdown-hide"
                      >
                        <a
                          class="nav-link"
                          href="/2"
                          target="_self"
                        >
                          Subnav2
                        </a>
                        <div
                          class="undefined collapse navbar-collapse sub-menu"
                        >
                          <ul
                            class="navbar-nav ml-auto sub-menu-2 "
                          >
                            <li
                              class="inactive dropdown-hide"
                            >
                              <a
                                class="nav-link"
                                href="/3"
                                target="_self"
                              >
                                NestedNav
                              </a>
                            </li>
                          </ul>
                        </div>
                      </li>
                    </ul>
                  </div>
                </li>
              </ul>
            </div>
          </nav>
        </header>
        <section
          class="techStack wrapper-std sc-jSMfEi glZcyQ"
        >
          <div
            class="techStack-list"
          >
            <h2
              class="mb-30"
            >
              Component Guide
            </h2>
            <h3>
              1. Component Structure Definition
            </h3>
            <ul>
              <li>
                <b>
                  Atom - 
                </b>
                These are the smallest building blocks of your project. Individual legos. Text styles, buttons, icons, input fields, checkboxes, etc.
              </li>
              <li>
                <b>
                  Molecule - 
                </b>
                Those are more complex entities consisting of several atoms. Things like notification toasts, data values (label: value), input fields with buttons.
              </li>
              <li>
                <b>
                  Organism - 
                </b>
                Truly functional parts of a page, made from groups of atoms and molecules. Many organisms function on their own, without relying on other elements on the page. They are usually huge components, like navigation, sidebars, forms, popups with lots of data, etc.
              </li>
              <li>
                <b>
                  Template - 
                </b>
                 They combine organisms into a proper website layout.
              </li>
              <li>
                <b>
                  Page - 
                </b>
                The routes we follow which renders the real content
              </li>
            </ul>
            <h3>
              2. Defined Atom Components
            </h3>
            <ul>
              <li>
                <b>
                  ButtonAtom - 
                </b>
                Button component which accepts probs like- buttonClass, variant and onButtonClick as function
              </li>
              <li>
                <b>
                  DownloadCSV - 
                </b>
                If we have requirement like convert json array to CSV by accepting defined key's of the array and then download the csv file, simply use this component by passing props like headers, fileName and data
              </li>
              <li>
                <b>
                  ErrorBoundry - 
                </b>
                It is a safe component to prevent your app from crashing
              </li>
              <li>
                <b>
                  FlashMessage - 
                </b>
                To prompt a message for few seconds on window. Ex: api success or failure msg
              </li>
              <li>
                <b>
                  Loader - 
                </b>
                Loader component to be used throughout application
              </li>
              <li>
                <b>
                  Select - 
                </b>
                Selectbox where only one option can be selected
              </li>
              <li>
                <b>
                  Multiselect - 
                </b>
                 Selectbox where multiple options can be selected
              </li>
              <li>
                <b>
                  Pagination - 
                </b>
                Allows to separate digital content into discrete pages
              </li>
              <li>
                <b>
                  TabButton - 
                </b>
                Atom to define tabs button
              </li>
              <li>
                <b>
                  ToggleSwitch - 
                </b>
                Atom defines a swich button which can be used for toggling actions. ex: fav/unfav
              </li>
              <li>
                <b>
                  Tooltip - 
                </b>
                Info content popover
              </li>
            </ul>
            <h3>
              3. Defined Molecule Components
            </h3>
            <ul>
              <li>
                <b>
                  Modal - 
                </b>
                Overlay Modal component which accepts childern prop to make content independent. Also exposed few configurations and properties.
              </li>
              <li>
                <b>
                  Accordion - 
                </b>
                This component is defined to serve large content in a small chunks through disclosure actions.
              </li>
              <li>
                <b>
                  Confirm Popover - 
                </b>
                 It provides popover with confirm and cancel actions
              </li>
              <li>
                <b>
                  Date Range Selector - 
                </b>
                 Calender component where custom definition can be passed as per requirement
              </li>
              <li>
                <b>
                  Tabs - 
                </b>
                 Tabs component to serve perticular toggled data.
              </li>
            </ul>
            <h3>
              4. Defined Organism Components
            </h3>
            <ul>
              <li>
                <b>
                  Header - 
                </b>
                Demonstrate header component with navdata and navlink files which contains the navigation configurations
              </li>
              <li>
                <b>
                  AboutForm - 
                </b>
                Demonstrate how can we use react-hook-forms and how ease it gives in validations and data submission
              </li>
              <li>
                <b>
                  Footer - 
                </b>
                Provides simple footer component definition which is a memonize component
              </li>
            </ul>
            <h3>
              5. Helper Modules and Libraries Implementation 
            </h3>
            <ul>
              <li>
                <b>
                  moment js
                </b>
                 Implementation ex :-
                <code>
                   moment().format('YYYY-MM-DD'); 
                </code>
                 :: output: 2022-07-07
              </li>
              <li>
                <b>
                  env-cmd
                </b>
                 Implementation Script ex :- 
                <br />
                <p
                  class="ml-50"
                >
                  Creation of build by serving dev env file ::
                  <code>
                     npm run build:development
                  </code>
                </p>
                <p
                  class="ml-50"
                >
                  Testing coverage by serving staging env file ::
                  <code>
                     npm run test:staging
                  </code>
                </p>
              </li>
            </ul>
          </div>
        </section>
        <section
          class="footer sc-bczRLJ eRSPWO"
        >
          <nav
            style="max-width: 1440px; margin: auto;"
          >
            <a
              class="footer-logo"
              href="/"
            >
              <img
                alt="logo-img"
                src="test-file-stub"
                width="150"
              />
            </a>
          </nav>
          <div
            class="disclaimer-text text-center"
          >
            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ips um has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.
          </div>
        </section>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-gKXOVf gukpUR"
    >
      <header
        class="header sc-eCYdqJ lkPLVQ"
      >
        <nav
          class="navbar  sc-hKMtZM jzgEMa"
        >
          <a
            class="navbar-brand "
            href="/"
          >
            <img
              alt="logo-img"
              src="test-file-stub"
              width="150"
            />
          </a>
          <div
            class="sc-gsnTZi gXHhKa collapse navbar-collapse menu-items"
          >
            <ul
              class="navbar-nav ml-auto main-menu "
            >
              <li
                class="active dropdown-hide"
              >
                <a
                  class="nav-link"
                  href="/"
                  target="_self"
                >
                  Tech Stacks
                </a>
              </li>
              <li
                class="inactive dropdown-hide"
              >
                <a
                  class="nav-link"
                  href="/component-library"
                  target="_self"
                >
                  Component Library
                </a>
              </li>
              <li
                class="inactive dropdown-hide"
              >
                <a
                  class="nav-link"
                  href="/project-structure"
                  target="_self"
                >
                  Project Structure
                </a>
              </li>
              <li
                class="inactive dropdown-hide"
              >
                <a
                  class="nav-link"
                  href="/utilities"
                  target="_self"
                >
                  Utilities
                </a>
              </li>
              <li
                class="inactive dropdown-hide"
              >
                <a
                  class="nav-link"
                  href="/testNav"
                  target="_self"
                >
                  TestNav
                </a>
                <div
                  class="undefined collapse navbar-collapse sub-menu"
                >
                  <ul
                    class="navbar-nav ml-auto sub-menu-1 "
                  >
                    <li
                      class="inactive dropdown-hide"
                    >
                      <a
                        class="nav-link"
                        href="/form"
                        target="_self"
                      >
                        FormEx
                      </a>
                    </li>
                    <li
                      class="inactive dropdown-hide"
                    >
                      <a
                        class="nav-link"
                        href="/2"
                        target="_self"
                      >
                        Subnav2
                      </a>
                      <div
                        class="undefined collapse navbar-collapse sub-menu"
                      >
                        <ul
                          class="navbar-nav ml-auto sub-menu-2 "
                        >
                          <li
                            class="inactive dropdown-hide"
                          >
                            <a
                              class="nav-link"
                              href="/3"
                              target="_self"
                            >
                              NestedNav
                            </a>
                          </li>
                        </ul>
                      </div>
                    </li>
                  </ul>
                </div>
              </li>
            </ul>
          </div>
        </nav>
      </header>
      <section
        class="techStack wrapper-std sc-jSMfEi glZcyQ"
      >
        <div
          class="techStack-list"
        >
          <h2
            class="mb-30"
          >
            Component Guide
          </h2>
          <h3>
            1. Component Structure Definition
          </h3>
          <ul>
            <li>
              <b>
                Atom - 
              </b>
              These are the smallest building blocks of your project. Individual legos. Text styles, buttons, icons, input fields, checkboxes, etc.
            </li>
            <li>
              <b>
                Molecule - 
              </b>
              Those are more complex entities consisting of several atoms. Things like notification toasts, data values (label: value), input fields with buttons.
            </li>
            <li>
              <b>
                Organism - 
              </b>
              Truly functional parts of a page, made from groups of atoms and molecules. Many organisms function on their own, without relying on other elements on the page. They are usually huge components, like navigation, sidebars, forms, popups with lots of data, etc.
            </li>
            <li>
              <b>
                Template - 
              </b>
               They combine organisms into a proper website layout.
            </li>
            <li>
              <b>
                Page - 
              </b>
              The routes we follow which renders the real content
            </li>
          </ul>
          <h3>
            2. Defined Atom Components
          </h3>
          <ul>
            <li>
              <b>
                ButtonAtom - 
              </b>
              Button component which accepts probs like- buttonClass, variant and onButtonClick as function
            </li>
            <li>
              <b>
                DownloadCSV - 
              </b>
              If we have requirement like convert json array to CSV by accepting defined key's of the array and then download the csv file, simply use this component by passing props like headers, fileName and data
            </li>
            <li>
              <b>
                ErrorBoundry - 
              </b>
              It is a safe component to prevent your app from crashing
            </li>
            <li>
              <b>
                FlashMessage - 
              </b>
              To prompt a message for few seconds on window. Ex: api success or failure msg
            </li>
            <li>
              <b>
                Loader - 
              </b>
              Loader component to be used throughout application
            </li>
            <li>
              <b>
                Select - 
              </b>
              Selectbox where only one option can be selected
            </li>
            <li>
              <b>
                Multiselect - 
              </b>
               Selectbox where multiple options can be selected
            </li>
            <li>
              <b>
                Pagination - 
              </b>
              Allows to separate digital content into discrete pages
            </li>
            <li>
              <b>
                TabButton - 
              </b>
              Atom to define tabs button
            </li>
            <li>
              <b>
                ToggleSwitch - 
              </b>
              Atom defines a swich button which can be used for toggling actions. ex: fav/unfav
            </li>
            <li>
              <b>
                Tooltip - 
              </b>
              Info content popover
            </li>
          </ul>
          <h3>
            3. Defined Molecule Components
          </h3>
          <ul>
            <li>
              <b>
                Modal - 
              </b>
              Overlay Modal component which accepts childern prop to make content independent. Also exposed few configurations and properties.
            </li>
            <li>
              <b>
                Accordion - 
              </b>
              This component is defined to serve large content in a small chunks through disclosure actions.
            </li>
            <li>
              <b>
                Confirm Popover - 
              </b>
               It provides popover with confirm and cancel actions
            </li>
            <li>
              <b>
                Date Range Selector - 
              </b>
               Calender component where custom definition can be passed as per requirement
            </li>
            <li>
              <b>
                Tabs - 
              </b>
               Tabs component to serve perticular toggled data.
            </li>
          </ul>
          <h3>
            4. Defined Organism Components
          </h3>
          <ul>
            <li>
              <b>
                Header - 
              </b>
              Demonstrate header component with navdata and navlink files which contains the navigation configurations
            </li>
            <li>
              <b>
                AboutForm - 
              </b>
              Demonstrate how can we use react-hook-forms and how ease it gives in validations and data submission
            </li>
            <li>
              <b>
                Footer - 
              </b>
              Provides simple footer component definition which is a memonize component
            </li>
          </ul>
          <h3>
            5. Helper Modules and Libraries Implementation 
          </h3>
          <ul>
            <li>
              <b>
                moment js
              </b>
               Implementation ex :-
              <code>
                 moment().format('YYYY-MM-DD'); 
              </code>
               :: output: 2022-07-07
            </li>
            <li>
              <b>
                env-cmd
              </b>
               Implementation Script ex :- 
              <br />
              <p
                class="ml-50"
              >
                Creation of build by serving dev env file ::
                <code>
                   npm run build:development
                </code>
              </p>
              <p
                class="ml-50"
              >
                Testing coverage by serving staging env file ::
                <code>
                   npm run test:staging
                </code>
              </p>
            </li>
          </ul>
        </div>
      </section>
      <section
        class="footer sc-bczRLJ eRSPWO"
      >
        <nav
          style="max-width: 1440px; margin: auto;"
        >
          <a
            class="footer-logo"
            href="/"
          >
            <img
              alt="logo-img"
              src="test-file-stub"
              width="150"
            />
          </a>
        </nav>
        <div
          class="disclaimer-text text-center"
        >
          Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ips um has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.
        </div>
      </section>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
