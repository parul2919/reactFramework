// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Component /> spec renders the component 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        style="max-width: 100%; margin: auto;"
      >
        <div
          class="sc-hKMtZM gPhcHH"
        >
          <header
            class="header sc-gsnTZi jOpTsK"
          >
            <nav
              class="navbar navbar-expand d-flex align-items-center justify-content-between"
            >
              <a
                class="navbar-brand "
                href="/"
              >
                <img
                  alt="logo-img"
                  src="test-file-stub"
                  width="150"
                />
              </a>
              <div
                class="collapse navbar-collapse"
              >
                <ul
                  class="navbar-nav ml-auto "
                >
                  <a
                    class="nav-link"
                    href="/"
                    style="text-decoration: underline;"
                    target="_self"
                  >
                    Tech Stacks
                  </a>
                  <a
                    class="nav-link"
                    href="/component-library"
                    style="text-decoration: none;"
                    target="_self"
                  >
                    Component Library
                  </a>
                  <a
                    class="nav-link"
                    href="/project-structure"
                    style="text-decoration: none;"
                    target="_self"
                  >
                    Project Structure
                  </a>
                </ul>
              </div>
            </nav>
          </header>
          <section
            class="projectStruct wrapper-std sc-dkzDqf dSlwri"
          >
            <div
              class="techStack-list"
            >
              <h2>
                In this Page we will walk you through the folder structure used in this architecure and it's usage
              </h2>
              <div
                class="folder-struct"
              >
                <div
                  class="folder-specs"
                >
                  <img
                    alt="root folder"
                    src="test-file-stub"
                  />
                  <div
                    class="folder-details"
                  >
                    <h3>
                       Root Folder Structure 
                    </h3>
                    <h4>
                      we have all the configuration files at this lever. Eg:
                    </h4>
                    <ul>
                      <li>
                        <b>
                          .eslint.config
                        </b>
                         - eslint and pritter rule set
                      </li>
                      <li>
                        <b>
                          jest.config
                        </b>
                         - jest and testing tool dependency
                      </li>
                      <li>
                        <b>
                          husky config
                        </b>
                         - precommit and prepush config file
                      </li>
                      <li>
                        <b>
                          git file
                        </b>
                         - git initialization file along with gitignore file
                      </li>
                      <li>
                        <b>
                          package.json
                        </b>
                         - module dependency file
                      </li>
                      <li>
                        <b>
                          env files
                        </b>
                         - files with different environment extension
                      </li>
                    </ul>
                  </div>
                </div>
                <div
                  class="folder-specs"
                >
                  <img
                    alt="src folder"
                    src="test-file-stub"
                  />
                  <div
                    class="folder-details"
                  >
                    <h3>
                       Source Folder Structure 
                    </h3>
                    <h4>
                      In src folder, we will have all module development. Such as:
                       
                    </h4>
                    <ul>
                      <li>
                        <b>
                          Components
                        </b>
                         - will have application feature code
                      </li>
                      <li>
                        <b>
                          Common
                        </b>
                         - It will contain common code which will get used throughout application whereever needed
                      </li>
                      <li>
                        <b>
                          Static
                        </b>
                         - It will have static assets such as font files and images
                      </li>
                      <li>
                        <b>
                          Router
                        </b>
                         - It will have all the routes and its linking
                      </li>
                      <li>
                        <b>
                          App
                        </b>
                         - Component serving application
                      </li>
                      <li>
                        <b>
                          Store
                        </b>
                         - It will have all store related dependencies
                      </li>
                    </ul>
                  </div>
                </div>
                <div
                  class="folder-specs"
                >
                  <img
                    alt="src >> store"
                    src="test-file-stub"
                  />
                  <div
                    class="folder-details"
                  >
                    <h3>
                       Store Folder Structure 
                    </h3>
                    <h4>
                      we have all store related dependencies. Eg:
                    </h4>
                    <ul>
                      <li>
                        <b>
                          Reducer
                        </b>
                         - Will have reducer files consuming data and serving in application
                      </li>
                      <li>
                        <b>
                          Action
                        </b>
                         - Will have dispatch function and type's defined
                      </li>
                      <li>
                        <b>
                          Saga
                        </b>
                         - It will have all the saga files of various api's
                      </li>
                      <li>
                        <b>
                          Connect
                        </b>
                         - Tells the configuration needed to connect appication with redux store
                      </li>
                    </ul>
                  </div>
                </div>
                <div
                  class="folder-specs"
                >
                  <img
                    alt="src >> component folder"
                    src="test-file-stub"
                  />
                  <div
                    class="folder-details"
                  >
                    <h3>
                       Component Folder Structure 
                    </h3>
                    <ul>
                      <li>
                        This folder is follwing atomic menthodology to define all the component team works on
                      </li>
                      <li>
                        Such as : Atom / Molecure / Organism / Template / Pages
                      </li>
                    </ul>
                  </div>
                </div>
                <div
                  class="folder-specs"
                >
                  <img
                    alt="src >> static folder"
                    src="test-file-stub"
                  />
                  <div
                    class="folder-details"
                  >
                    <h3>
                       Static Folder Structure
                    </h3>
                    <h4>
                      Contains all static assets
                    </h4>
                    <ul>
                      <li>
                        <b>
                          img
                        </b>
                         - will have images being used in application
                      </li>
                      <li>
                        <b>
                          fonts
                        </b>
                         - will have font files of family being used in application
                      </li>
                    </ul>
                  </div>
                </div>
                <div
                  class="common-folder"
                >
                  <h3>
                     Common Folder Structure 
                  </h3>
                  <div
                    class="d-flex"
                  >
                    <img
                      alt="src >> common >> style >> css "
                      src="test-file-stub"
                    />
                    <img
                      alt="src >> common >> Js"
                      src="test-file-stub"
                    />
                    <img
                      alt="src >> common >> style >> theme folder"
                      src="test-file-stub"
                    />
                  </div>
                  <div
                    class="folder-details"
                  >
                    <h4>
                      Contains utility files to make development easy and to avoid redundency
                       
                    </h4>
                    <ul>
                      <li>
                        <b>
                          style :: css
                        </b>
                         - will have static styling classes defined to make styling bit quick
                      </li>
                      <li>
                        <b>
                          style :: theme
                        </b>
                         - will have defined theme file properties such as buttons, font etc
                      </li>
                      <li>
                        <b>
                          js
                        </b>
                         - will have few utility functions defind to be used throughout application
                      </li>
                    </ul>
                  </div>
                </div>
              </div>
            </div>
          </section>
          <section
            class="footer sc-bczRLJ eRSPWO"
          >
            <nav
              style="max-width: 1440px; margin: auto;"
            >
              <a
                class="footer-logo"
                href="/"
              >
                <img
                  alt="logo-img"
                  src="test-file-stub"
                  width="150"
                />
              </a>
            </nav>
            <div
              class="disclaimer-text text-center"
            >
              Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ips um has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.
            </div>
          </section>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      style="max-width: 100%; margin: auto;"
    >
      <div
        class="sc-hKMtZM gPhcHH"
      >
        <header
          class="header sc-gsnTZi jOpTsK"
        >
          <nav
            class="navbar navbar-expand d-flex align-items-center justify-content-between"
          >
            <a
              class="navbar-brand "
              href="/"
            >
              <img
                alt="logo-img"
                src="test-file-stub"
                width="150"
              />
            </a>
            <div
              class="collapse navbar-collapse"
            >
              <ul
                class="navbar-nav ml-auto "
              >
                <a
                  class="nav-link"
                  href="/"
                  style="text-decoration: underline;"
                  target="_self"
                >
                  Tech Stacks
                </a>
                <a
                  class="nav-link"
                  href="/component-library"
                  style="text-decoration: none;"
                  target="_self"
                >
                  Component Library
                </a>
                <a
                  class="nav-link"
                  href="/project-structure"
                  style="text-decoration: none;"
                  target="_self"
                >
                  Project Structure
                </a>
              </ul>
            </div>
          </nav>
        </header>
        <section
          class="projectStruct wrapper-std sc-dkzDqf dSlwri"
        >
          <div
            class="techStack-list"
          >
            <h2>
              In this Page we will walk you through the folder structure used in this architecure and it's usage
            </h2>
            <div
              class="folder-struct"
            >
              <div
                class="folder-specs"
              >
                <img
                  alt="root folder"
                  src="test-file-stub"
                />
                <div
                  class="folder-details"
                >
                  <h3>
                     Root Folder Structure 
                  </h3>
                  <h4>
                    we have all the configuration files at this lever. Eg:
                  </h4>
                  <ul>
                    <li>
                      <b>
                        .eslint.config
                      </b>
                       - eslint and pritter rule set
                    </li>
                    <li>
                      <b>
                        jest.config
                      </b>
                       - jest and testing tool dependency
                    </li>
                    <li>
                      <b>
                        husky config
                      </b>
                       - precommit and prepush config file
                    </li>
                    <li>
                      <b>
                        git file
                      </b>
                       - git initialization file along with gitignore file
                    </li>
                    <li>
                      <b>
                        package.json
                      </b>
                       - module dependency file
                    </li>
                    <li>
                      <b>
                        env files
                      </b>
                       - files with different environment extension
                    </li>
                  </ul>
                </div>
              </div>
              <div
                class="folder-specs"
              >
                <img
                  alt="src folder"
                  src="test-file-stub"
                />
                <div
                  class="folder-details"
                >
                  <h3>
                     Source Folder Structure 
                  </h3>
                  <h4>
                    In src folder, we will have all module development. Such as:
                     
                  </h4>
                  <ul>
                    <li>
                      <b>
                        Components
                      </b>
                       - will have application feature code
                    </li>
                    <li>
                      <b>
                        Common
                      </b>
                       - It will contain common code which will get used throughout application whereever needed
                    </li>
                    <li>
                      <b>
                        Static
                      </b>
                       - It will have static assets such as font files and images
                    </li>
                    <li>
                      <b>
                        Router
                      </b>
                       - It will have all the routes and its linking
                    </li>
                    <li>
                      <b>
                        App
                      </b>
                       - Component serving application
                    </li>
                    <li>
                      <b>
                        Store
                      </b>
                       - It will have all store related dependencies
                    </li>
                  </ul>
                </div>
              </div>
              <div
                class="folder-specs"
              >
                <img
                  alt="src >> store"
                  src="test-file-stub"
                />
                <div
                  class="folder-details"
                >
                  <h3>
                     Store Folder Structure 
                  </h3>
                  <h4>
                    we have all store related dependencies. Eg:
                  </h4>
                  <ul>
                    <li>
                      <b>
                        Reducer
                      </b>
                       - Will have reducer files consuming data and serving in application
                    </li>
                    <li>
                      <b>
                        Action
                      </b>
                       - Will have dispatch function and type's defined
                    </li>
                    <li>
                      <b>
                        Saga
                      </b>
                       - It will have all the saga files of various api's
                    </li>
                    <li>
                      <b>
                        Connect
                      </b>
                       - Tells the configuration needed to connect appication with redux store
                    </li>
                  </ul>
                </div>
              </div>
              <div
                class="folder-specs"
              >
                <img
                  alt="src >> component folder"
                  src="test-file-stub"
                />
                <div
                  class="folder-details"
                >
                  <h3>
                     Component Folder Structure 
                  </h3>
                  <ul>
                    <li>
                      This folder is follwing atomic menthodology to define all the component team works on
                    </li>
                    <li>
                      Such as : Atom / Molecure / Organism / Template / Pages
                    </li>
                  </ul>
                </div>
              </div>
              <div
                class="folder-specs"
              >
                <img
                  alt="src >> static folder"
                  src="test-file-stub"
                />
                <div
                  class="folder-details"
                >
                  <h3>
                     Static Folder Structure
                  </h3>
                  <h4>
                    Contains all static assets
                  </h4>
                  <ul>
                    <li>
                      <b>
                        img
                      </b>
                       - will have images being used in application
                    </li>
                    <li>
                      <b>
                        fonts
                      </b>
                       - will have font files of family being used in application
                    </li>
                  </ul>
                </div>
              </div>
              <div
                class="common-folder"
              >
                <h3>
                   Common Folder Structure 
                </h3>
                <div
                  class="d-flex"
                >
                  <img
                    alt="src >> common >> style >> css "
                    src="test-file-stub"
                  />
                  <img
                    alt="src >> common >> Js"
                    src="test-file-stub"
                  />
                  <img
                    alt="src >> common >> style >> theme folder"
                    src="test-file-stub"
                  />
                </div>
                <div
                  class="folder-details"
                >
                  <h4>
                    Contains utility files to make development easy and to avoid redundency
                     
                  </h4>
                  <ul>
                    <li>
                      <b>
                        style :: css
                      </b>
                       - will have static styling classes defined to make styling bit quick
                    </li>
                    <li>
                      <b>
                        style :: theme
                      </b>
                       - will have defined theme file properties such as buttons, font etc
                    </li>
                    <li>
                      <b>
                        js
                      </b>
                       - will have few utility functions defind to be used throughout application
                    </li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </section>
        <section
          class="footer sc-bczRLJ eRSPWO"
        >
          <nav
            style="max-width: 1440px; margin: auto;"
          >
            <a
              class="footer-logo"
              href="/"
            >
              <img
                alt="logo-img"
                src="test-file-stub"
                width="150"
              />
            </a>
          </nav>
          <div
            class="disclaimer-text text-center"
          >
            Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ips um has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.
          </div>
        </section>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
